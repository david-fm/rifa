---
import Layout from '@/layouts/Layout.astro';
import Button from '@/components/Button.tsx';
import Input from '@/components/Input';


const serverURL = import.meta.env.API;

---

<Layout title="KingRifa">
	<div class="h-full">
        <form action={serverURL+"api-auth/login/"} class="h-full">
            <div class=" w-full flex justify-center items-center h-full">
                <div class="w-80 flex flex-col justify-center items-center gap-8">
                    <div class="flex flex-col gap-4">
                        <Input placeholder='Correo' type='email' extraClass='rounded-md' name='email' isRequiered/>
                        <Input placeholder='Contraseña' type='password' extraClass='rounded-md' name='password' isRequiered/>
                    </div>
                    <div class="flex flex-col gap-1 items-center">
                        
                        <p class="hidden text-input-texto" id="error"></p>
                        <p>No tienes una cuenta: <a href="register" class=" text-input-texto">Regístrate</a></p>
                        <Button type='submit' text='ENTRAR' extraClass='rounded-sm' client:load>
                    </div>
                </div>
                
                
            </div>
        </form>
	</div>
</Layout>

<script>

import {$token, $refreshToken, $isCreador, $baseUser, $creadorInfo, $timeToken, $buying} from '@/store.ts';
import {forbiddenOnLoggedIn} from '@/lib/functions'

forbiddenOnLoggedIn();

const form = document.querySelector('form');
const handleError = (err: any) => {
    const error = document.getElementById('error');
    // if error 500
    if(error)
    {
        error.innerText = 'La contraseña debe tener mayusculas, minusculas, numeros y caracteres especiales (@$!%*?&)';
        error.classList.remove('hidden');
    }
}
form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    //console.log('submit');
    const formData = new FormData(form);
    const toSend = {
        email: formData.get('email'),
        password: formData.get('password')
    }
    const res = await fetch(form.action, {
        method: 'POST',
        body: JSON.stringify(toSend),
        headers: {
            'Content-Type': 'application/json'
        }
    })
    if(res.status !== 200) {
        handleError(res);
        return;
    }
    else{
        res.json().then(data => {
            $token.set(data.token);
            $refreshToken.set(data.refresh);
            $timeToken.set(Date.now());

            $baseUser.setKey('username', data.username);
            $baseUser.setKey('email', data.email);  
            
            $isCreador.set(data.isCreador);
            $creadorInfo.setKey('logo', data.creadorInfo.logo);
            $creadorInfo.setKey('support_link', data.creadorInfo.support_link);
            console.log($buying.get());
            if($buying.get()!=='')
                window.location.href = `/rifa/${$buying.get()}`;
            else
                window.location.href = '/dashboard';
        })
        
    }
});
</script>